function theTitle = makeTitle(unit, runNumber)

geometry = [];
index = unit.flag;

plural = { '', 's' };

load(FKDefaults, 'N0', 'S', 'alpha', 'beta', 'gamma', 'Theta', 'geometry', ...
    'nPull', 'epsilonPull', 'tau0Pull', 'taufPull', ...
    'nPush', 'epsilonPush', 'tau0Push', 'taufPush', 'M', 'Lambda', 'Psi', ...
    'dTug', 'taufTug', 'gammaTug')

if strcmp(geometry, 'chain')
    
    titleLine = { sprintf('Free-end chain, N0 = %d, spacing = a, Run %d', ...
        N0, runNumber) };
    
elseif strcmp(geometry(1), 's')
    
    titleLine = { sprintf('Free-end chain, N0 = %d, %d soliton IC (unequilibrated), Run %d', ...
        N0, str2double(geometry(2:end)), runNumber) };
    
elseif strcmp(geometry(1), 'e')
    
    titleLine = { sprintf('Free-end chain, N0 = %d, %d soliton IC (equilibrated), Run %d', ...
        N0, str2double(geometry(2:end)), runNumber) };
    
else
    
    titleLine = { sprintf('Periodic chain, N0 = %d, S = %d, Run %d', ...
        N0, S, runNumber) };
    
end

if index == 2
    
    titleLine = [ titleLine sprintf('Physical parameters for %s in a %s nanotube', ...
        unit.monomer, unit.type) ];
    
end
    
titleLine = [ titleLine ...
    sprintf('%s = %.2f%s, %s = %.2e%s, a/%s = %.2f, %s = %.1f%s', ...
    unit.tempSymbol{index}, Theta*unit.tempFactor{index}, unit.tempName{index}, ...
    unit.dampingSymbol{index}, beta*unit.dampingFactor{index}, ...
    unit.dampingName{index}, '\lambda', alpha/(2*pi), ...
    unit.springSymbol{index}, gamma*unit.springFactor{index}, ...
    unit.springName{index}) ];

if nPull > 0
    
    titleLine = [ titleLine [ ...
        sprintf('Pulled %d molecule%s with %s = %.1f%s over [ %.1f%s, %.1f%s ]', ...
        nPull, plural{(nPull > 1) + 1}, unit.forceSymbol{index}, ...
        epsilonPull*unit.forceFactor{index}, unit.forceName{index}, ...
        tau0Pull*unit.timeFactor{index}, unit.timeName{index}, ...
        taufPull*unit.timeFactor{index}, unit.timeName{index}) ] ];
    
end

if nPush > 0
    
    titleLine = [ titleLine [ ...
        sprintf('Pushed %d molecule%s with %s = %.1f%s over [ %.1f%s, %.1f%s ]', ...
        nPush, plural{(nPush > 1) + 1}, unit.forceSymbol{index}, ...
        epsilonPush*unit.forceFactor{index}, unit.forceName{index}, ...
        tau0Push*unit.timeFactor{index}, unit.timeName{index}, ...
        taufPush*unit.timeFactor{index}, unit.timeName{index}) ] ];
    
end


if dTug ~= 0
    
    titleLine = [ titleLine [ 'Pulled 1 molecule by ' ...
        num2str(dTug, '%.2f') '\lambda, '...
        sprintf(' over %s%s = %.1f%s, with %s = %.1f%s', ...
        '\Delta', unit.timeSymbol{index}, taufTug*unit.timeFactor{index}, ...
        unit.timeName{index}, unit.springSymbol{index}, ...
        gammaTug*unit.springFactor{index}, unit.springName{index}) ] ];

end

if M ~= 0
    
    titleLine = [ titleLine [ 'Substrate break after ' num2str(M, '%d') ' wavelengths, ' ...
        '\lambda_R/\lambda_L = ' num2str(Lambda, '%.2f') ...
        ', V_R/V_L = ' num2str(Psi, '%.2f') ] ];

end

theTitle = titleLine{1};

for i = 2:length(titleLine)
    
    theTitle = [ theTitle sprintf('\n') titleLine{i} ]; %#ok<AGROW>
    
end

end
